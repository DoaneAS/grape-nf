// main script name
manifest.mainScript = 'grape-pipeline.nf'

// params
params.sjOverHang = 100
params.wigRefPrefix = 'chr'

//Tools configuration
toolchain  = 'goolf-1.4.10-no-OFED'
python     = 'Python-2.7.3'

//Modules
modules = [
    gem: [ version: '1.7.1' ],
    STAR: [ version: '2.4.0j' ],
    RSEM: [ version: '1.2.15' ],
    SAMtools: [ version: '0.1.19' ],
    pigz: [ version: '2.3.1' ],
    RSeQC: [ version: '2.3.9', suffix: '-Python-2.7.3' ],
    KentUtils: [ version: '308' ],
    pysam: [ version: '0.8.0', suffix: '-Python-2.7.3' ],
    BEDTools: [ version: '2.19.1' ],
    BamTools: [ version: '2.3.1' ],
    toolchain: '-goolf-1.4.10-no-OFED'
]

//Strand-view mapping for bigwig step
bwStrandViews = [
    NONE: ['RawSignal'],
    MATE1_SENSE: ['MinusRawSignal', 'PlusRawSignal'],
    MATE2_SENSE: ['MinusRawSignal', 'PlusRawSignal']
]

// Process configuration
process {

    beforeScript = 'module purge'

    executor = 'sge'
    queue    = 'rg-el6,long-sl65'
    penv = 'smp'

    command = {
        "${baseDir}/bin/${task.process}/${task.tool}${task.profile}"
    }

    profile = '' 
    version = { modules[task.tool].version }
    modules = { [task.tool] }
    module = { 
        mods = []
        task.modules.each { mods << "${it}/${modules[it].version}${modules.toolchain}${modules[it]?.suffix ?: ''}" } 
        mods.join(':')
    }

    errorStrategy = { params?.errorStrategy }
    
    tag = { if (view) id else species }

    $index {
        tool = 'STAR'
        cpus = 4
        memory = '62G'
        time = '24h'
    }
    $t_index {
        tool = 'RSEM'
        cpus = 4
        memory = '15G'
        time = '24h'
    }
    $fastaIndex {
        tool = 'SAMtools'
    }
    $mapping {
        tool = 'STAR'
        profile = { params.cufflinks ? "-"+params.cufflinks : '' }
        modules = [tool, 'pigz', 'SAMtools']
        cpus = 8
        memory = '62G'
        time = '48h'
    }
    $mergeBam {
        tool = 'SAMtools'
        cpus = 8
        memory = '31G'
    }
    $inferExp {
        tool = 'RSeQC'
        modules = [tool, 'pysam', 'KentUtils']
    }
    $bigwig {
        modules = ['SAMtools', 'STAR', 'KentUtils']
        profile = { '-' + readStrand }
        views = {
            bwStrandViews[readStrand]
        }
        cpus = 4
        memory = '15G'
        time = '12h'
    }
    $contig {
        tool = 'CRG'
        profile = { '-' + readStrand }
        modules = ['SAMtools', 'BEDTools', 'BamTools', 'KentUtils']
        cpus = 4
        memory = '31G'
        time = '12h'
    }
    $quantification {
        tool = 'RSEM'
        profile = { '-' + readStrand }
        cpus = 8
        memory = '62G'
        time = '24h'
    }

}
